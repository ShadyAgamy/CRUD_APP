{"version":3,"sources":["apis/entries.js","history.js","components/entries/EntryList.js","actions/index.js","actions/types.js","components/entries/EntryForm.js","components/entries/EntryCreate.js","components/entries/EntryEdit.js","components/App.js","reducers/index.js","reducers/entryReducer.js","index.js"],"names":["axios","create","baseURL","createHistory","EntryList","entries","useSelector","state","dispatch","useDispatch","react_default","a","createElement","className","style","textAlign","Link","to","Container","Row","length","map","entry","Col","md","key","id","Card","Body","Title","Category","Subtitle","API","Text","Description","type","concat","onClick","payload","EntryForm","renderInput","formProps","input","label","meta","error","touched","Object","assign","autoComplete","_this","renderError","onSubmit","formValues","props","_ref","this","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","Auth","EntryCreate","entries_EntryForm","history","push","createEntry","EntryEdit","find","x","parseInt","match","params","useEffect","initialValues","_","pick","editEntry","App","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","data","stop","_x","apply","arguments","Router","Switch","Route","path","exact","combineReducers","formReducer","undefined","action","_state$slice","slice","lastItem","slicedToArray","toConsumableArray","objectSpread","updatedState","newState","filter","forEach","index","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.001108b7.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.publicapis.org/'\n}); ","import createHistory from 'history/createHashHistory';\n\nexport default createHistory();","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteEntry } from \"../../actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Col, Row, Container, Card } from \"react-bootstrap\";\n\nconst EntryList = () => {\n  const entries = useSelector((state) => state.entries);\n\n  const dispatch = useDispatch();\n\n  const renderList = () => {\n    return entries.map((entry) => {\n      return (\n        <Col md={3} className=\"mb-4 \" key={entry.id}>\n          <Card className=\"h-100 \">\n            <Card.Body>\n              <Card.Title>{entry.Category}</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                {entry.API}\n              </Card.Subtitle>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                {entry.Link}\n              </Card.Subtitle>\n              <Card.Text>{entry.Description}</Card.Text>\n              <Link\n                type=\"button\"\n                className=\"btn btn-info me-2 mb-2\"\n                to={`/entries/edit/${entry.id}`}\n              >\n                Edit\n              </Link>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger  me-2 mb-2\"\n                onClick={() => dispatch(deleteEntry(entry.id))}\n              >\n                Delete\n              </button>\n            </Card.Body>\n          </Card>\n        </Col>\n      );\n    });\n  };\n\n  const renderCreate = () => {\n    return (\n      <div style={{ textAlign: \"right\" }}>\n        <Link to=\"/entries/new\">\n          <button className=\"btn btn-warning\">Create New</button>\n        </Link>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"mb-4 d-flex align-items-center justify-content-between\">\n        <h2 className=\" h3\">All Entries</h2>\n        {renderCreate()}\n      </div>\n\n      <Container>\n        <Row>{entries.length>1?renderList(): <p>Loading...</p>}</Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default EntryList;\n","import entries from \"../apis/entries\";\nimport { CREATE_ENTRY, FETCH_ENTRIES, DELETE_ENTRY, EDIT_ENTRY } from \"./types\";\nimport history from \"../history\";\n\nexport const createEntry = (formValues) => (dispatch) => {\n  dispatch({\n    type: CREATE_ENTRY,\n    payload: formValues,\n  });\n  history.push(\"/\");\n};\n\nexport const fetchEntries = () => async (dispatch) => {\n  const response = await entries.get(\"/entries\");\n  dispatch({\n    type: FETCH_ENTRIES,\n    payload: response.data,\n  });\n};\n\nexport const editEntry = (id, formValues) => (dispatch) => {\n  dispatch({\n    type: EDIT_ENTRY,\n    payload: { id, formValues },\n  });\n  history.push(\"/\");\n};\n\nexport const deleteEntry = (id) => (dispatch) => {\n  dispatch({\n    type: DELETE_ENTRY,\n    payload: id,\n  });\n};\n","// Action Types\nexport const CREATE_ENTRY = 'CREATE_ENTRY';\nexport const FETCH_ENTRIES = 'FETCH_ENTRIES';\nexport const DELETE_ENTRY = 'DELETE_ENTRY';\nexport const EDIT_ENTRY = 'EDIT_ENTRY';","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport \"./styles.css\"\nclass EntryForm extends React.Component {\n\n    renderError({error, touched}){\n        if(touched && error){\n            return (\n                <div className=\"text-danger\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            );\n        }\n    }\n\n    renderInput = (formProps) =>{\n        const { input, label, meta } = formProps;\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n        return (\n            <div className={className}>\n                <label>{label}</label>\n                <input {...input} autoComplete=\"off\" />\n                <div>{this.renderError(meta)}</div>\n            </div>\n        );\n    }\n\n    onSubmit = (formValues) => {\n        this.props.onSubmit(formValues);\n    };\n\n    render(){   \n        return (\n            <form className=\"ui form error\" \n            onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                <Field name=\"API\" component={this.renderInput} label=\"Enter API: \" />\n                <Field name=\"Auth\" component={this.renderInput} label=\"Enter Auth: \" />\n                <Field name=\"Category\" component={this.renderInput} label=\"Enter Category: \" />\n                <Field name=\"Description\" component={this.renderInput} label=\"Enter descripiton: \" />\n                <Field name=\"Link\" component={this.renderInput} label=\"Enter Link: \" />\n                <button className=\"btn btn-primary\">Submit</button>\n            </form>\n        );\n    }\n};\n\nconst validate = (formValues) => {\n    const errors = {};\n    if(!formValues.API){\n        errors.API = 'You must enter a API';\n    }\n    if(!formValues.Auth){\n        errors.Auth = 'You must enter a Auth';\n    }\n    if(!formValues.Category){\n        errors.Category = 'You must enter a Category';\n    }\n    if(!formValues.Description){\n        errors.Description = 'You must enter a description';\n    }\n    if(!formValues.Link){\n        errors.Link = 'You must enter a Link';\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: 'EntryForm',\n    validate\n})(EntryForm);\n","import React from \"react\";\nimport { createEntry } from \"../../actions\";\nimport EntryForm from \"./EntryForm\";\nimport {  useDispatch } from \"react-redux\";\nconst EntryCreate = () => {\n    const dispatch = useDispatch();\n  const onSubmit = (formValues) => {\n    dispatch(createEntry(formValues)) ;\n  };\n\n  return (\n    <div>\n      <h3>Create An Entry</h3>\n      <EntryForm onSubmit={onSubmit} />\n    </div>\n  );\n};\n\nexport default EntryCreate;\n","import _ from \"lodash\";\nimport React, { useEffect } from \"react\";\nimport { editEntry } from \"../../actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport EntryForm from \"./EntryForm\";\n\nconst EntryEdit = (props) => {\n  const dispatch = useDispatch();\n\n  const entry = useSelector((state) =>\n    state.entries.find(\n      (x) => parseInt(x.id) === parseInt(props.match.params.id)\n    )\n  );\n\n  useEffect(() => {}, []);\n\n  const onSubmit = (formValues) => {\n    dispatch(editEntry(props.match.params.id, formValues));\n  };\n\n  return (\n    <div>\n      <h3>Edit Entry</h3>\n      <EntryForm\n        initialValues={_.pick(\n          entry,\n          \"API\",\n          \"Auth\",\n          \"Category\",\n          \"Description\",\n          \"Link\"\n        )}\n        onSubmit={onSubmit}\n      />\n    </div>\n  );\n};\n\nexport default EntryEdit;\n","import React, { useEffect } from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport EntryList from \"./entries/EntryList\";\nimport EntryCreate from \"./entries/EntryCreate\";\nimport EntryEdit from \"./entries/EntryEdit\";\n\nimport { fetchEntries } from \"../actions\";\nimport {useDispatch } from \"react-redux\";\n\nimport history from \"../history\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchEntries());\n  }, []);\n  return (\n    <div className=\" container mt-4\">\n      <Router history={history}>\n        <div>\n          <Switch>\n            <Route path=\"/\" exact component={EntryList} />\n            <Route path=\"/entries/list\" exact component={EntryList} />\n            <Route path=\"/entries/new\" exact component={EntryCreate} />\n            <Route path=\"/entries/edit/:id\" exact component={EntryEdit} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport entryReducer from './entryReducer';\n\nexport default combineReducers({\n    form: formReducer,\n    entries: entryReducer\n});","import {\n  CREATE_ENTRY,\n  FETCH_ENTRIES,\n  DELETE_ENTRY,\n  EDIT_ENTRY,\n} from \"../actions/types\";\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    default:\n      return state;\n    case CREATE_ENTRY:\n      const [lastItem] = state.slice(-1);\n      return [...state, { ...action.payload, id: lastItem.id + 1 }];\n    case EDIT_ENTRY:\n      const updatedState = state.map((x) =>\n        parseInt(x.id) === parseInt(action.payload.id)\n          ? { ...x, ...action.payload.formValues }\n          : x\n      );\n      return [...updatedState];\n    case DELETE_ENTRY:\n      const id = action.payload;\n      const newState = state.filter((entry) => {\n        return entry.id !== id;\n      });\n      return [...newState];\n    case FETCH_ENTRIES:\n      action.payload.entries.forEach((entry, index) => {\n        return (entry.id = index);\n      });\n      return [...state, ...action.payload.entries];\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App  />\n    </Provider>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}